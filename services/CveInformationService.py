from integrations.CirclSearchIntegration import CirclSearchIntegration
from models.CveInformationModels import *

class CveInformationService:
    def __init__(self):
        self.circl_integration = CirclSearchIntegration()

    def get_cve_information(self, cve_id: str):
        data = self.circl_integration.get_cve_information(cve_id)
        return self.__mapper_cve_information(data)

    def __mapper_cve_information(self, data):
        id = data['id']
        access = self.__mapper_cve_access(data)
        publish = data['Published']
        resume = data['summary']
        cvss = float(data['cvss'])
        impact = self.__mapper_cve_impact(data)
        references = data['references']


    def __mapper_cve_access(self, data):
        authentication = data['access']['authentication']
        complexity = data['access']['complexity']
        vector = data['access']['vector']
        
        return AccessModel(authentication, complexity, vector)
    
    def __mapper_cve_impact(self, data):
        availability = data['impact']['availability']
        confidentiality = data['impact']['confidentiality']
        integrity = data['impact']['integrity']
        
        return ImpactModel(availability, confidentiality, integrity)